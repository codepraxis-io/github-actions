name: "Build and publish a Docker image to a Docker registry"
description: "Builds a container image and pushes it to DockerHub and GitHub Packages"
inputs:
  registry: 
    description: "Name of target registry"
    required: false
    default: registry.hub.docker.com
  registry_username:
    description: "Username for target registry"
    required: true
  registry_password:
    description: "Password for target registry"
    required: true
  image_name:
    description: "Name of the Docker image to push"
    required: true
  extra_tags: 
    description: "Extra tags for Docker image (comma-separated)"
    required: false 
  context:
    description: "Root directory for building the Docker image"
    required: false 
    default: '.'
  dockerfile_path:
    description: "Path to Dockerfile"
    required: false 
    default: 'Dockerfile'
  build_args: 
    description: "Build-time args for Docker image build (comma-separated)"
    required: false
  environment: 
    description: "Target environment for deployment"
    required: false
runs:
  using: "composite"
  steps:
    - name: Prepare
      id: prep
      shell: bash
      run: |
        GIT_BRANCH=$(echo ${GITHUB_REF#refs/heads/})
        GIT_COMMIT=$(git rev-parse --short HEAD)
        DOCKER_TAG_COMMIT="$GIT_BRANCH.$GIT_COMMIT"
        ENVIRONMENT=${{ inputs.environment }}
        DOCKER_TAGS="${{ inputs.image_name }}:$DOCKER_TAG_COMMIT"
        for EXTRA_TAG in $(echo ${{ inputs.extra_tags }} | tr ',' ' '); do
          DOCKER_TAGS="$DOCKER_TAGS,${{ inputs.image_name }}:$EXTRA_TAG"
        done
        echo ::set-output name=git_branch::${GIT_BRANCH}
        echo ::set-output name=git_commit::${GIT_COMMIT}
        echo ::set-output name=docker_tag_commit::${DOCKER_TAG_COMMIT}
        echo ::set-output name=docker_tags::${DOCKER_TAGS}

    - name: Setup BuildX
      uses: docker/setup-buildx-action@v1

    - name: Login to the Registry
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - name: Build and Push the Docker Image
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile_path }}
        push: true
        tags: ${{ steps.prep.outputs.docker_tags }}
        build-args: ${{ inputs.build_args }}